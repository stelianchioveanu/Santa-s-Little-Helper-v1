Starting audit...
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\annual\AnnualChange.java:10:12: Variable 'newSantaBudget' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\annual\AnnualChange.java:11:21: Variable 'newGifts' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\annual\AnnualChange.java:12:22: Variable 'newChildren' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\annual\AnnualChange.java:13:28: Variable 'childrenUpdates' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:7:39: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:8:12: Variable 'lastName' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:9:12: Variable 'firstName' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:10:13: Variable 'age' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:11:12: Variable 'city' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:13: Line is longer than 100 characters (found 144). [LineLength]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:13:18: Parameter id should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:13:30: Parameter lastName should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:13:47: Parameter firstName should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:13:65: Parameter age should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:13:78: Parameter city should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:13:91: Parameter niceScore should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:13:109: Parameter giftsPreference should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:23:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:27:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:27:23: Parameter id should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:31:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:35:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:35:29: Parameter lastName should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:39:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:43:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:43:30: Parameter firstName should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:47:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:51:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:51:24: Parameter age should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:55:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:59:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:59:25: Parameter city should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:63:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:67:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:67:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:71:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getGiftsPreference' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getGiftsPreference' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:75:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setGiftsPreference' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setGiftsPreference' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\Child.java:75:36: Parameter giftsPreference should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\ChildUpdate.java:6:13: Variable 'id' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\ChildUpdate.java:7:12: Variable 'niceScore' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\children\ChildUpdate.java:8:23: Variable 'giftsPreference' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\database\Database.java:14:1: Class Database should be declared as final. [FinalClass]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\database\Database.java:40:56: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\database\Database.java:40:57: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\database\Database.java:42:36: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\database\Database.java:42:37: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\database\Database.java:44:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\fileio\input\Input.java:4:13: Variable 'numberOfYears' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\fileio\input\InputLoader.java:3:1: Redundant import from the same package - fileio.input.Input. [RedundantImport]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\fileio\input\InputLoader.java:16:5: Class 'InputLoader' looks like designed for extension (can be subclassed), but the method 'getInputPath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputLoader' final or making the method 'getInputPath' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\fileio\input\InputLoader.java:20:5: Class 'InputLoader' looks like designed for extension (can be subclassed), but the method 'readData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputLoader' final or making the method 'readData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\fileio\input\InputLoader.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\fileio\input\InputLoader.java:20:28: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\gift\Gift.java:6:12: Variable 'productName' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\gift\Gift.java:7:12: Variable 'price' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\gift\Gift.java:8:14: Variable 'category' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\gift\Gift.java:10:17: Parameter productName should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\gift\Gift.java:10:37: Parameter price should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\gift\Gift.java:10:51: Parameter category should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\gift\Gift.java:16:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\gift\Gift.java:20:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\gift\Gift.java:20:32: Parameter productName should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\gift\Gift.java:24:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\gift\Gift.java:28:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\gift\Gift.java:28:26: Parameter price should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\gift\Gift.java:32:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\gift\Gift.java:36:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\gift\Gift.java:36:29: Parameter category should be final. [FinalParameters]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\main\Main.java:47:80: '4' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stelian\Desktop\proiect1\.\src\main\Main.java:58:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 70 errors.
